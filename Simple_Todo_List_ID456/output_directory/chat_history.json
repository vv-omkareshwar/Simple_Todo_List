[
    {
        "role": "user",
        "content": "target file path - Simple_Todo_List_ID456/src/main/resources/static/script.js"
    },
    {
        "role": "assistant",
        "content": "// Function to fetch all todos from the server\nasync function fetchTodos() {\n    try {\n        const response = await fetch('/api/todos');\n        if (!response.ok) {\n            throw new Error('Failed to fetch todos');\n        }\n        const todos = await response.json();\n        displayTodos(todos);\n    } catch (error) {\n        console.error('Error fetching todos:', error);\n        displayError('Failed to load todos. Please try again later.');\n    }\n}\n\n// Function to display todos in the UI\nfunction displayTodos(todos) {\n    const todoList = document.getElementById('todo-list');\n    todoList.innerHTML = '';\n    todos.forEach(todo => {\n        const li = document.createElement('li');\n        li.textContent = todo.title;\n        if (todo.completed) {\n            li.classList.add('completed');\n        }\n        li.onclick = () => toggleTodoStatus(todo.id, !todo.completed);\n        \n        const deleteBtn = document.createElement('button');\n        deleteBtn.textContent = 'Delete';\n        deleteBtn.onclick = (e) => {\n            e.stopPropagation();\n            deleteTodo(todo.id);\n        };\n        \n        li.appendChild(deleteBtn);\n        todoList.appendChild(li);\n    });\n}\n\n// Function to add a new todo\nasync function addTodo(event) {\n    event.preventDefault();\n    const titleInput = document.getElementById('new-todo');\n    const title = titleInput.value.trim();\n    \n    if (!title) {\n        displayError('Please enter a todo title');\n        return;\n    }\n    \n    try {\n        const response = await fetch('/api/todos', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ title, completed: false }),\n        });\n        \n        if (!response.ok) {\n            throw new Error('Failed to add todo');\n        }\n        \n        titleInput.value = '';\n        fetchTodos();\n    } catch (error) {\n        console.error('Error adding todo:', error);\n        displayError('Failed to add todo. Please try again.');\n    }\n}\n\n// Function to toggle todo status\nasync function toggleTodoStatus(id, completed) {\n    try {\n        const response = await fetch(`/api/todos/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ completed }),\n        });\n        \n        if (!response.ok) {\n            throw new Error('Failed to update todo status');\n        }\n        \n        fetchTodos();\n    } catch (error) {\n        console.error('Error updating todo status:', error);\n        displayError('Failed to update todo status. Please try again.');\n    }\n}\n\n// Function to delete a todo\nasync function deleteTodo(id) {\n    try {\n        const response = await fetch(`/api/todos/${id}`, {\n            method: 'DELETE',\n        });\n        \n        if (!response.ok) {\n            throw new Error('Failed to delete todo');\n        }\n        \n        fetchTodos();\n    } catch (error) {\n        console.error('Error deleting todo:', error);\n        displayError('Failed to delete todo. Please try again.');\n    }\n}\n\n// Function to display error messages\nfunction displayError(message) {\n    const errorDiv = document.getElementById('error-message');\n    errorDiv.textContent = message;\n    errorDiv.style.display = 'block';\n    setTimeout(() => {\n        errorDiv.style.display = 'none';\n    }, 3000);\n}\n\n// Event listeners\ndocument.addEventListener('DOMContentLoaded', fetchTodos);\ndocument.getElementById('todo-form').addEventListener('submit', addTodo);"
    }
]