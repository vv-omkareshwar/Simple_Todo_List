{
  "name": "Simple_Todo_List",
  "type": "folder",
  "children": [
    {
      "name": "index.html",
      "type": "file",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta\n      name=\"keywords\"\n      content=\"to do list, online to do list, to do list app\"\n    />\n    <meta\n      name=\"description\"\n      content=\"Responsive, online To Do List App that can save the tasks into local storage.\n    Whenever you enter from a device, your information won't be lost unless clear local storage by clearing the history or doing something else.\"\n    />\n    <meta name=\"author\" content=\"Okan Uregen\" />\n    <title>To Do List</title>\n    <script\n      src=\"https://kit.fontawesome.com/9c206210e0.js\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n      crossorigin=\"anonymous\"\n    />\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <div class=\"mx-auto container mt-5 row\">\n      <div class=\"task-add-box my-3 col-12 col-lg-4 order-lg-3\">\n        <div class=\"card\">\n          <div class=\"card-header\"><h5>Add New Task</h5></div>\n          <div class=\"card-body px-4\">\n            <form id=\"addingForm\" class=\"form-group row\" action=\"\">\n              <input\n                class=\"form-control col-10 col-md-11 col-lg-10\"\n                type=\"text\"\n                placeholder=\"Enter a task\"\n              />\n              <button\n                type=\"submit\"\n                class=\"btn btn-outline-success col-2 col-md-1 col-lg-2\"\n              >\n                <i class=\"fas fa-plus\"></i>\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"space col-0 col-lg-1 order-lg-2\"></div>\n\n      <div class=\"list-box my-3 col-12 col-lg-7 order-lg-1\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h5 class=\"float-left\">To Do List</h5>\n            <a\n              href=\"\"\n              class=\"float-right btn btn-outline-danger rounded\"\n              id=\"delAll\"\n            >\n              Delete All\n            </a>\n          </div>\n          <div class=\"card-body p-0\">\n            <ul id=\"mainList\" class=\"list-group\">\n              <div id=\"accordion\">\n                <li id=\"upperLi\" class=\"list-group-item d-none\">\n                  <a\n                    href=\"#collapse0\"\n                    class=\"card-link list-item line-throught\"\n                    data-toggle=\"collapse\"\n                  >\n                    <!--Text Here-->\n                  </a>\n\n                  <a\n                    href=\"#\"\n                    class=\"delete-item text-danger float-right fas fa-times mt-1 mx-1\"\n                  ></a>\n                  <a\n                    href=\"#\"\n                    class=\"check text-success float-right fas fa-check mt-1 mx-4\"\n                  ></a>\n                  <div id=\"collapse0\" class=\"collapse\" data-parent=\"#accordion\">\n                    <div class=\"under-list-item\">\n                      <ul class=\"list-group\">\n                        <li id=\"innerLi\" class=\"list-group-item\">\n                          <span class=\"m-0 p-0\"><!--Text Here--></span>\n                          <a\n                            href=\"#\"\n                            class=\"d-none delete-inner-item text-danger float-right fas fa-times mt-1 mx-1\"\n                          ></a>\n                          <a\n                            href=\"#\"\n                            class=\"d-none inner-check text-success float-right fas fa-check mt-1 mx-4\"\n                          ></a>\n                        </li>\n                        <div class=\"mt-2 under-list-input px-4\">\n                          <form action=\"\" class=\"form-group row\">\n                            <input\n                              class=\"form-control col-10 col-md-11\"\n                              type=\"text\"\n                              placeholder=\"Enter Subtask\"\n                            />\n                            <button\n                              type=\"submit\"\n                              class=\"btn-add-inner-task btn btn-primary col-2 col-md-1 p-0\"\n                            >\n                              <i class=\"i-add-inner-task fas fa-plus\"></i>\n                            </button>\n                          </form>\n                        </div>\n                      </ul>\n                    </div>\n                  </div>\n                </li>\n              </div>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <footer class=\"bg-dark text-light text-center p-3\">\n      <a href=\"https://www.github.com/omkareshwar9849\" class=\"text-light\"\n        >by Omkareshwar</a\n      >\n    </footer>\n\n    <script src=\"script.js\"></script>\n    <script\n      src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\n      integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\n      integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"\n      integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\"\n      crossorigin=\"anonymous\"\n    ></script>\n  </body>\n</html>\n",
      "language": "html"
    },
    {
      "name": "script.js",
      "type": "file",
      "content": "let allTasks = [];\nlet innerTasks = [];\n\nlet count = 1; //for identical collapse id\nconst upperLi = document.getElementById(\"upperLi\");\nconst innerLi = document.getElementById(\"innerLi\");\nconst mainForm = document.getElementById(\"addingForm\");\nconst mainInput = addingForm.children[0];\nconst mainList = document.getElementById(\"mainList\");\nconst delAll = document.getElementById(\"delAll\");\n\neventListeners();\nloadLS();\nloadInnerTasks();\n\n// all Listeners\nfunction eventListeners() {\n  //submit event\n  mainForm.addEventListener(\"submit\", addNewItem);\n\n  //task stufs\n  mainList.addEventListener(\"click\", taskStufs);\n\n  //delete all tasks\n  delAll.addEventListener(\"click\", deleteAll);\n}\n\n//to creat new task\nfunction createNewTask(text, check) {\n  //to clone upper visible li in html page\n  const newLi = upperLi.cloneNode(true);\n  //making visible the new li\n  newLi.classList.remove(\"d-none\");\n  //removing id\n  newLi.setAttribute(\"id\", \"\");\n\n  newLi.children[0].setAttribute(\"href\", `#collapse${count}`); //identical colapseId\n\n  newLi.children[0].classList.remove(\"line-throught\");\n\n  newLi.children[0].innerText = text;\n  if (check === true) {\n    newLi.children[0].classList.add(\"line-throught\");\n  } else {\n    newLi.children[0].classList.remove(\"line-throught\");\n  }\n  newLi.children[3].setAttribute(\"id\", `collapse${count}`);\n\n  mainList.children[0].appendChild(newLi);\n\n  count++; //for different value of collapseId\n  mainInput.value = \"\";\n}\n\n//add New Task\nfunction addNewItem(e) {\n  e.preventDefault();\n  //entered text\n  const taskText = mainInput.value;\n\n  if (taskText != \"\") {\n    allTasks = JSON.parse(localStorage.getItem(\"allTasks\"));\n    let c = false;\n    allTasks.forEach(function (item) {\n      if (item.text == taskText) {\n        c = true;\n        alert(\"Task Already Added\");\n      }\n    });\n    if (c == false) {\n      createNewTask(taskText);\n      saveLS(taskText, 1);\n    }\n  }\n}\n\n//to add Inner Tasks\nfunction addInnerTask(upperText, mainText, check) {\n  //to clone inner visible li from html page\n  let tempLi = innerLi.cloneNode(true);\n  tempLi.setAttribute(\"id\", \"\");\n\n  //making visible check and delete icons.\n  tempLi.childNodes.forEach(function (item, index) {\n    if (index == 3 || index == 5) {\n      item.classList.remove(\"d-none\");\n    }\n  });\n  //to add the value to new li text\n  tempLi.children[0].innerText = mainText;\n\n  //check\n  if (check == true) {\n    tempLi.children[0].classList.add(\"line-throught\");\n  } else {\n    tempLi.children[0].classList.remove(\"line-throught\");\n  }\n\n  //adding new inner task to last of the list before form\n  let tempList;\n  for (let i = 1; i < mainList.children[0].children.length; i++) {\n    if (upperText == mainList.children[0].children[i].children[0].innerText) {\n      tempList = mainList.children[0].children[i];\n      break;\n    }\n  }\n\n  //adding inner to upper\n  tempList.lastElementChild.firstElementChild.firstElementChild.insertBefore(\n    tempLi,\n    tempList.lastElementChild.firstElementChild.firstElementChild\n      .lastElementChild\n  );\n}\n\n//delete and check a task - add new inner task\nfunction taskStufs(e) {\n  e.preventDefault();\n  //delete item\n  if (e.target.classList.contains(\"delete-item\")) {\n    //remove LS\n\n    const text = e.target.parentElement.children[0].innerText;\n    saveLS(text, 0);\n\n    //remove inner tasks of it\n    let tempInnerList = JSON.parse(localStorage.getItem(\"innerTasks\"));\n\n    tempInnerList.forEach(function (item) {\n      if (text == item.upperTaskText) {\n        saveInnerTasks(item.mainText, 0, text);\n      }\n    });\n\n    //remove from page\n    e.target.parentElement.remove();\n\n    // to check an inner task\n  } else if (e.target.classList.contains(\"delete-inner-item\")) {\n    const upperText =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.children[0].innerText;\n    //removing LS\n    saveInnerTasks(e.target.parentElement.children[0].innerText, 0, upperText);\n\n    //Removing Page\n    e.target.parentElement.remove();\n  } else if (e.target.classList.contains(\"check\")) {\n    let tmpList = JSON.parse(localStorage.getItem(\"allTasks\"));\n\n    if (\n      e.target.parentElement.children[0].classList.contains(\"line-throught\")\n    ) {\n      for (let i = 0; i < tmpList.length; i++) {\n        if (tmpList[i].text == e.target.parentElement.children[0].innerText) {\n          tmpList[i].check = false;\n          localStorage.setItem(\"allTasks\", JSON.stringify(tmpList));\n          break;\n        }\n      }\n\n      e.target.parentElement.children[0].classList.remove(\"line-throught\");\n    } else {\n      for (let i = 0; i < tmpList.length; i++) {\n        if (tmpList[i].text == e.target.parentElement.children[0].innerText) {\n          tmpList[i].check = true;\n          localStorage.setItem(\"allTasks\", JSON.stringify(tmpList));\n          break;\n        }\n      }\n\n      e.target.parentElement.children[0].classList.add(\"line-throught\");\n    }\n\n    //adding inner task with button\n  } else if (e.target.classList.contains(\"inner-check\")) {\n    let tmp = JSON.parse(localStorage.getItem(\"innerTasks\"));\n\n    const upperText =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.children[0].innerText;\n\n    if (\n      e.target.parentElement.children[0].classList.contains(\"line-throught\")\n    ) {\n      tmp.forEach(function (item) {\n        if (\n          item.mainText == e.target.parentElement.children[0].innerText &&\n          item.upperTaskText == upperText\n        ) {\n          item.check = false;\n          localStorage.setItem(\"innerTasks\", JSON.stringify(tmp));\n        }\n      });\n      e.target.parentElement.children[0].classList.remove(\"line-throught\");\n    } else {\n      tmp.forEach(function (item) {\n        if (\n          item.mainText == e.target.parentElement.children[0].innerText &&\n          item.upperTaskText == upperText\n        ) {\n          item.check = true;\n          localStorage.setItem(\"innerTasks\", JSON.stringify(tmp));\n        }\n      });\n      e.target.parentElement.children[0].classList.add(\"line-throught\");\n    }\n  } else if (e.target.classList.contains(\"btn-add-inner-task\")) {\n    //getting value of input\n    const text = e.target.parentElement.childNodes[1].value;\n\n    if (text != \"\") {\n      innerTasks = JSON.parse(localStorage.getItem(\"innerTasks\"));\n\n      //getting upper text\n      const upperText =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .parentElement.parentElement.children[0].innerText;\n\n      let c = true;\n      innerTasks.forEach(function (item) {\n        if (item.mainText == text && item.upperTaskText == upperText) {\n          c = false;\n          alert(\"Task Already Added\");\n        }\n      });\n      if (c == true) {\n        //adding innerTask List\n        innerTasks.push({\n          upperTaskText: upperText,\n          mainText: text,\n          check: false,\n        });\n        addInnerTask(upperText, text);\n        saveInnerTasks(innerTasks[innerTasks.length - 1], 1);\n      }\n    }\n    //clear input\n    e.target.parentElement.childNodes[1].value = \"\";\n\n    //adding inner task with i tag that in the button\n    //same things with adding with btn\n  } else if (e.target.classList.contains(\"i-add-inner-task\")) {\n    let text = e.target.parentElement.parentElement.childNodes[1].value;\n\n    if (text != \"\") {\n      //getting upper text\n      const upperText =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .parentElement.parentElement.parentElement.children[0].innerText;\n\n      //adding innerTask List\n      innerTasks.push({ upperTaskText: upperText, mainText: text });\n\n      addInnerTask(upperText, text);\n      saveInnerTasks(innerTasks[innerTasks.length - 1], 1);\n\n      //clear input\n      e.target.parentElement.parentElement.childNodes[1].value = \"\";\n    }\n  }\n}\n//delete all\nfunction deleteAll(e) {\n  e.preventDefault();\n\n  let list =\n    e.target.parentElement.parentElement.children[1].children[0].childNodes[1]\n      .children;\n\n  while (list.length != 1) {\n    //block the remove main invisible li in html\n    list[list.length - 1].remove();\n  }\n  saveLS(\"\", -1);\n  saveInnerTasks(\"\", -1);\n}\n\n//loading Main Tasks\nfunction loadLS() {\n  if (localStorage.getItem(\"allTasks\") === null) {\n    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\n  } else {\n    allTasks = JSON.parse(localStorage.getItem(\"allTasks\"));\n\n    allTasks.forEach(function (item) {\n      if (item != \"\") {\n        createNewTask(item.text, item.check);\n      }\n    });\n  }\n}\n\n//loading Inner Tasks\nfunction loadInnerTasks() {\n  if (localStorage.getItem(\"innerTasks\") === null) {\n    localStorage.setItem(\"innerTasks\", JSON.stringify(innerTasks));\n  } else {\n    innerTasks = JSON.parse(localStorage.getItem(\"innerTasks\"));\n\n    innerTasks.forEach(function (item) {\n      if (item.mainText != \"\") {\n        addInnerTask(item.upperTaskText, item.mainText, item.check);\n      }\n    });\n  }\n}\n\n//saving Main Tasks\nfunction saveLS(text, index) {\n  //if index = 1 add, = 0 remove, =-1 remove all\n  if (index == -1) {\n    localStorage.removeItem(\"allTasks\");\n    allTasks.length = 0;\n    loadLS();\n  } else if (index == 0) {\n    const tmp = JSON.parse(localStorage.getItem(\"allTasks\"));\n    let c;\n    tmp.forEach(function (item, ind) {\n      if (item.text == text) c = ind;\n    });\n    tmp.splice(c, 1);\n    localStorage.setItem(\"allTasks\", JSON.stringify(tmp));\n\n    //delete inner tasks whose upper text that\n    const tmp2 = JSON.parse(localStorage.getItem(\"innerTasks\"));\n\n    for (let i = 0; i < tmp2.length; i++) {\n      if (tmp2[i].upperTaskText == text) {\n        saveInnerTasks(tmp[i], 0);\n      }\n    }\n  } else if (index == 1) {\n    const tmp = JSON.parse(localStorage.getItem(\"allTasks\"));\n    tmp.push({ text: text, check: false });\n    localStorage.setItem(\"allTasks\", JSON.stringify(tmp));\n  }\n}\n\n//saving Inner Tasks\nfunction saveInnerTasks(item, index, upperText = \"\") {\n  //if index = 1 add, = 0 remove, =-1 remove all, 2 check, =3 removeCheck\n  if (index == -1) {\n    localStorage.removeItem(\"innerTasks\");\n    innerTasks.length = 0;\n    loadInnerTasks();\n  } else if (index == 0) {\n    const tmp = JSON.parse(localStorage.getItem(\"innerTasks\"));\n\n    let cont = false;\n    let c;\n    tmp.forEach(function (e, ind) {\n      if (e.mainText == item && e.upperTaskText == upperText) {\n        c = ind;\n        cont = true;\n      }\n    });\n    if (cont) {\n      tmp.splice(c, 1);\n      localStorage.setItem(\"innerTasks\", JSON.stringify(tmp));\n    }\n  } else if (index == 1) {\n    const tmp = JSON.parse(localStorage.getItem(\"innerTasks\"));\n    tmp.push(item);\n    localStorage.setItem(\"innerTasks\", JSON.stringify(tmp));\n  }\n}\n",
      "language": "javascript"
    }
  ],
  "git_url": null,
  "branch": "main"
}